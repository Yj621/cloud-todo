{"ast":null,"code":"var _jsxFileName = \"/Users/yj-621/Desktop/git/cloud-todo/src/ToyNavigationApp/Navi02.js\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createContext, useContext, useState } from \"react\";\nimport { Button } from \"../components/Button\";\nimport styles from './styles';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  const {\n    setPage\n  } = useContext(Ctx);\n  return _jsxDEV(View, {\n    children: [_jsxDEV(Text, {\n      style: styles.text,\n      children: \" Main \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: \"Board\\uB85C \\uAC00\\uAE30\",\n      onPress: () => setPage(\"board\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\nconst Board = () => {\n  const {\n    setPage\n  } = useContext(Ctx);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(Text, {\n      style: styles.text,\n      children: \" Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: \"About \\uAC00\\uAE30\",\n      onPress: () => setPage(\"about\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\nconst About = () => {\n  const {\n    setPage\n  } = useContext(Ctx);\n  return _jsxDEV(View, {\n    children: [_jsxDEV(Text, {\n      style: styles.text,\n      children: \" About \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: \"Main\\uC73C\\uB85C \\uAC00\\uAE30\",\n      onPress: () => setPage(\"main\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\nconst Ctx = createContext(null);\nconst Navigator = ({\n  children\n}) => {\n  const {\n    page,\n    setPage\n  } = useContext(Ctx);\n  if (page == \"\") setPage(children[0].props.name);\n  return _jsxDEV(View, {\n    children: children.filter(child => child.props.name == page)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n};\nexport default function Navi02() {\n  const [page, setPage] = useState(\"main\");\n  return _jsxDEV(Ctx.Provider, {\n    value: {\n      page,\n      setPage\n    },\n    children: [_jsxDEV(View, {\n      style: {\n        flexDirection: \"row\"\n      },\n      children: [_jsxDEV(Button, {\n        title: \"\\uD648\",\n        onPress: () => setPage(\"main\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"\\uC790\\uB8CC\\uC2E4\",\n        onPress: () => setPage(\"board\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"about\",\n        onPress: () => setPage(\"about\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), _jsxDEV(Navigator, {\n      children: [_jsxDEV(Main, {\n        name: \"main\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), _jsxDEV(Board, {\n        name: \"board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), _jsxDEV(About, {\n        name: \"about\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["createContext","useContext","useState","Button","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","setPage","Ctx","View","children","Text","style","text","fileName","_jsxFileName","lineNumber","columnNumber","title","onPress","Board","About","Navigator","page","props","name","filter","child","Navi02","Provider","value","flexDirection"],"sources":["/Users/yj-621/Desktop/git/cloud-todo/src/ToyNavigationApp/Navi02.js"],"sourcesContent":["//Navigator Component로 구조화 시키기\r\n\r\nimport { Text, View } from \"react-native\";\r\nimport { createContext, useContext, useState } from \"react\";\r\nimport { Button } from \"../components/Button\";\r\nimport styles from './styles';\r\n\r\nconst Main = () => {\r\n  const { setPage } = useContext(Ctx);\r\n\r\n  return (\r\n    <View>\r\n      <Text style={styles.text}> Main </Text>\r\n      <Button title=\"Board로 가기\" onPress={() => setPage(\"board\")} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst Board = () => {\r\n  const { setPage } = useContext(Ctx);\r\n\r\n  return (\r\n    <>\r\n      <Text style={styles.text}> Board</Text>\r\n      <Button title=\"About 가기\" onPress={() => setPage(\"about\")} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst About = () => {\r\n  const { setPage } = useContext(Ctx);\r\n\r\n  return (\r\n    <View>\r\n      <Text style={styles.text}> About </Text>\r\n      <Button title=\"Main으로 가기\" onPress={() => setPage(\"main\")} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst Ctx = createContext(null);\r\n\r\n\r\n//1. Navigator\r\nconst Navigator = ({ children }) => {\r\n  const { page, setPage } = useContext(Ctx);\r\n  if (page == \"\") setPage(children[0].props.name);\r\n  return <View>\r\n    {children.filter((child) => child.props.name == page)}\r\n  </View>\r\n}\r\n\r\n\r\n\r\n//Navigator Component로 구조화 시키기\r\nexport default function Navi02() {\r\n  const [page, setPage] = useState(\"main\");\r\n\r\n  return (\r\n    <Ctx.Provider value={{ page, setPage }}>\r\n      <View style={{ flexDirection: \"row\" }}>\r\n        <Button title=\"홈\" onPress={() => setPage(\"main\")} />\r\n        <Button title=\"자료실\" onPress={() => setPage(\"board\")} />\r\n        <Button title=\"about\" onPress={() => setPage(\"about\")} />\r\n      </View>\r\n      <Navigator>\r\n        <Main name=\"main\" />\r\n        <Board name=\"board\" />\r\n        <About name=\"about\" />\r\n      </Navigator>\r\n    </Ctx.Provider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}