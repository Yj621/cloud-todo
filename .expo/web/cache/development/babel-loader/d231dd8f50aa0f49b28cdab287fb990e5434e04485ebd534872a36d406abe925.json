{"ast":null,"code":"var _jsxFileName = \"/Users/yj-621/Desktop/git/cloud-todo/src/ToyNavigationApp/Navi05.js\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createContext, useContext, useState } from \"react\";\nimport { Button } from \"../components/Button\";\nimport styles from './styles';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  const navigate = useNavigator();\n  return _jsxDEV(View, {\n    children: [_jsxDEV(Text, {\n      style: styles.text,\n      children: \" Main \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: \"Board\\uB85C \\uAC00\\uAE30\",\n      onPress: () => navigate(\"board\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\nconst Board = () => {\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(Text, {\n      style: styles.text,\n      children: \" Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: \"About \\uAC00\\uAE30\",\n      onPress: () => navigate(\"about\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\nconst About = () => {\n  const useNavigator = () => {\n    const {\n      setPage\n    } = useContext(Ctx);\n    return setPage;\n  };\n  return _jsxDEV(View, {\n    children: [_jsxDEV(Text, {\n      style: styles.text,\n      children: \" About \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      title: \"Main\\uC73C\\uB85C \\uAC00\\uAE30\",\n      onPress: () => navigate(\"main\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\nconst Ctx = createContext(null);\nconst Navigator = ({\n  children\n}) => {\n  const [page, setPage] = useState(\"\");\n  if (page == \"\") setPage(children[0].props.name);\n  if (page == \"\") setPage(children[0].props.name);\n  return _jsxDEV(Ctx.Provider, {\n    value: {\n      setPage\n    },\n    children: _jsxDEV(View, {\n      children: [_jsxDEV(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        children: children.map(child => _jsxDEV(Button, {\n          title: child.props.name,\n          onPress: () => setPage(child.props.name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), _jsxDEV(View, {\n        children: children.filter(child => child.props.name == page)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 10\n  }, this);\n};\nconst Screen = ({\n  component\n}) => component();\nexport default function Navi05() {\n  return _jsxDEV(Navigator, {\n    children: [_jsxDEV(Screen, {\n      name: \"main\",\n      component: Main\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), _jsxDEV(Screen, {\n      name: \"board\",\n      component: Board\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), _jsxDEV(Screen, {\n      name: \"about\",\n      component: About\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["createContext","useContext","useState","Button","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","navigate","useNavigator","View","children","Text","style","text","fileName","_jsxFileName","lineNumber","columnNumber","title","onPress","Board","About","setPage","Ctx","Navigator","page","props","name","Provider","value","flexDirection","map","child","filter","Screen","component","Navi05"],"sources":["/Users/yj-621/Desktop/git/cloud-todo/src/ToyNavigationApp/Navi05.js"],"sourcesContent":["//Custom Hook 구현\r\n\r\nimport { Text, View } from \"react-native\";\r\nimport { createContext, useContext, useState } from \"react\";\r\nimport { Button } from \"../components/Button\";\r\nimport styles from './styles';\r\n\r\nconst Main = () => {\r\n  const navigate = useNavigator();\r\n  return (\r\n    <View>\r\n      <Text style={styles.text}> Main </Text>\r\n      <Button title=\"Board로 가기\" onPress={() => navigate(\"board\")} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst Board = () => {\r\n\r\n  //3. \r\n\r\n\r\n  return (\r\n    <>\r\n      <Text style={styles.text}> Board</Text>\r\n      <Button title=\"About 가기\" onPress={() => navigate(\"about\")} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst About = () => {\r\n  const useNavigator = () => {\r\n    const { setPage } = useContext(Ctx)\r\n    return setPage\r\n  }\r\n  return (\r\n    <View>\r\n      <Text style={styles.text}> About </Text>\r\n      <Button title=\"Main으로 가기\" onPress={() => navigate(\"main\")} />\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\nconst Ctx = createContext(null);\r\n\r\nconst Navigator = ({ children }) => {\r\n\r\n  const [page, setPage] = useState(\"\")\r\n  if (page == \"\") setPage(children[0].props.name);\r\n\r\n  if (page == \"\") setPage(children[0].props.name)\r\n\r\n  return <Ctx.Provider value={{ setPage }}>\r\n    <View>\r\n      <View style={{ flexDirection: 'row' }}>\r\n        {children.map(child =>\r\n          <Button title={child.props.name} onPress={() => setPage(child.props.name)} />)\r\n        }\r\n      </View>\r\n      <View>{children.filter((child) => child.props.name == page)}</View>\r\n    </View>\r\n  </Ctx.Provider>\r\n}\r\n\r\nconst Screen = ({ component }) => component();  // Main -> <Main />\r\n\r\n//custom hook: page 이동에 사용되는 Context 이름과 해당 state를 알 필요없이 customHook으로 일반화 시킬 수 있다.\r\n//1. \r\n\r\n\r\n\r\nexport default function Navi05() {\r\n  return (\r\n    <Navigator>\r\n      <Screen name=\"main\" component={Main} />\r\n      <Screen name=\"board\" component={Board} />\r\n      <Screen name=\"about\" component={About} />\r\n    </Navigator>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}